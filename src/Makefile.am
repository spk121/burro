bin_PROGRAMS = burro-engine
lib_LTLIBRARIES = libburrowidget.la

################################################################
# TOP-LEVEL SOURCES

libburrowidget_la_SOURCES = \
 burro_canvas.c burro_canvas.h \
 burro_canvas_vram.c burro_canvas_vram.h \
 burro_canvas_bg.c burro_canvas_bg.h \
 burro_canvas_colors.c burro_canvas_colors.h \
 burro_canvas_audio.c burro_canvas_audio.h

SRCS_X_H = \
 x/xcairo.h \
 x/xgdk.h \
 x/xgdk-pixbuf.h \
 x/xgio.h \
 x/xglib.h \
 x/xgtk.h \
 x/xguile.h \
 x/xpulseaudio.h

SRCS_Y_H =

SRCS_X_C   = \
 x/xcairo.c \
 x/xgdk.c \
 x/xgdk-pixbuf.c \
 x/xgio.c \
 x/xglib.c \
 x/xgtk.c \
 x/xguile.c \
 x/xpulseaudio.c

SRCS_Y_C =

DOT_X_FILES = \
 x/xcairo.x \
 x/xgdk-pixbuf.x \
 x/xgdk.x \
 x/xgio.x \
 x/xglib.x \
 x/xgtk.x \
 x/xguile.x \
 x/xpulseaudio.x \
 burro_app_win.x \
 burro_canvas.x \
 burro_canvas_vram.x \
 burro_canvas_bg.x \
 burro_canvas_audio.x

BUILT_SOURCES = $(DOT_X_FILES) \
 r/burro.resource.c \
 r/burro.resource.h \
 burro_paths.h

EXTRA_DIST = r/burro.resource.xml

r/burro.resource.c: r/burro.resource.xml r/app-menu.ui r/window.ui r/burro_preferences_dialog.ui r/gears-menu.ui
	$(GLIB_COMPILE_RESOURCES) --sourcedir=r --generate-source $<

r/burro.resource.h: r/burro.resource.xml
	$(GLIB_COMPILE_RESOURCES) --sourcedir=r --generate-header $<

burro_paths.h: Makefile
	$(AM_V_GEN)rm -f $@-t && \
	{ echo '/* DO NOT EDIT! GENERATED AUTOMATICALLY! */'; \
	  echo '#define PREFIX "$(prefix)"'; \
	  echo '#define EXEC_PREFIX "$(exec_prefix)"'; \
	  echo '#define BINDIR "$(bindir)"'; \
	  echo '#define SBINDIR "$(sbindir)"'; \
	  echo '#define LIBEXECDIR "$(libexecdir)"'; \
	  echo '#define DATAROOTDIR "$(datarootdir)"'; \
	  echo '#define DATADIR "$(datadir)"'; \
	  echo '#define SYSCONFDIR "$(sysconfdir)"'; \
	  echo '#define SHAREDSTATEDIR "$(sharedstatedir)"'; \
	  echo '#define LOCALSTATEDIR "$(localstatedir)"'; \
	  echo '#define RUNSTATEDIR "$(runstatedir)"'; \
	  echo '#define INCLUDEDIR "$(includedir)"'; \
	  echo '#define OLDINCLUDEDIR "$(oldincludedir)"'; \
	  echo '#define DOCDIR "$(docdir)"'; \
	  echo '#define INFODIR "$(infodir)"'; \
	  echo '#define HTMLDIR "$(htmldir)"'; \
	  echo '#define DVIDIR "$(dvidir)"'; \
	  echo '#define PDFDIR "$(pdfdir)"'; \
	  echo '#define PSDIR "$(psdir)"'; \
	  echo '#define LIBDIR "$(libdir)"'; \
	  echo '#define LISPDIR "$(lispdir)"'; \
	  echo '#define LOCALEDIR "$(localedir)"'; \
	  echo '#define MANDIR "$(mandir)"'; \
	  echo '#define MANEXT "$(manext)"'; \
	  echo '#define GUILESITEDIR "$(guilesitedir)"'; \
	  echo '#define PKGDATADIR "$(pkgdatadir)"'; \
	  echo '#define PKGINCLUDEDIR "$(pkgincludedir)"'; \
	  echo '#define PKGLIBDIR "$(pkglibdir)"'; \
	  echo '#define PKGLIBEXECDIR "$(pkglibexecdir)"'; \
	} | sed '/""/d' > $@-t && \
	mv -f $@-t $@

CLEANFILES = $(DOT_X_FILES) burro_paths.h

burro_engine_SOURCES = $(SRCS_X_H) \
 $(SRCS_X_C) \
 $(SRCS_Y_H) \
 $(SRCS_Y_C) \
 r/burro.resource.c r/burro.resource.h \
 burro_app.c burro_app.h \
 burro_app_win.c burro_app_win.h \
 burro_preferences_dialog.c burro_preferences_dialog.h \
 burro_lisp.c burro_lisp.h \
 burro_repl.c burro_repl.h \
 main.c

burro_engine_LDADD = $(DEPS_LIBS) $(GUILE_LIBS) -lburrowidget -lm
AM_CFLAGS = $(DEPS_CFLAGS) $(GUILE_CFLAGS)

libborrowidget_la_CFLAGS = -fvisibility=hidden
libburrowidget_la_LDFLAGS = -no-undefined
libburrowidget_la_LIBADD = $(DEPS_LIBS) $(GUILE_LIBS) -lm

snarfcppopts = $(DEFS) $(AM_CPPFLAGS) $(CPPFLAGS) $(CFLAGS) $(AM_CFLAGS)

SUFFIXES = .x

.c.x:
	$(GUILE_SNARF) -o $@ $< $(snarfcppopts)

gsettings_SCHEMAS = com.lonelycactus.burroengine.gschema.xml
EXTRA_DIST += $(gsettings_SCHEMAS) \
 r/app-menu.ui \
 r/window.ui \
 r/burro_preferences_dialog.ui \
 r/gears-menu.ui

@GSETTINGS_RULES@


################################################################
# Guile scheme libraries

burroguilesitedir=$(guilesitedir)/burro
burroprocessguilesitedir=$(burroguilesitedir)/process

dist_guilesite_DATA = burro.scm

dist_burroguilesite_DATA = \
 burro/colors.scm \
 burro/debug.scm \
 burro/drivers.scm \
 burro/error.scm \
 burro/pm.scm \
 burro/xml.scm

dist_burroprocessguilesite_DATA = \
 burro/process/base.scm \
 burro/process/call-procedure.scm \
 burro/process/fade.scm \
 burro/process/text-click.scm \
 burro/process/wait.scm

################################################################
# Flymake support

get_cs_flags = $(foreach target,$(subst .,_,$(subst -,_,$($(2)))),$($(target)_$(1)FLAGS))
get_cs_all_flags = $(foreach type,$(2),$(call get_cs_flags,$(1),$(type)))
get_cs_compile = $(if $(subst C,,$(1)),$($(1)COMPILE),$(COMPILE))
get_cs_cmdline = $(call get_cs_compile,$(1)) $(call get_cs_all_flags,$(1),check_PROGRAMS bin_PROGRAMS lib_LTLIBRARIES) -fsyntax-only

check-syntax:
        s=$(suffix $(CHK_SOURCES));\
        if   [ "$$s" = ".c"   ]; then \
		$(call get_cs_cmdline,C)   $(CHK_SOURCES);\
        elif [ "$$s" = ".cpp" ]; then \
		$(call get_cs_cmdline,CXX) $(CHK_SOURCES);\
        else exit 1; fi

.PHONY: check-syntax
